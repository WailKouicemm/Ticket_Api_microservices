"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.authMiddlware = void 0;
const jwt_generator_1 = require("../services/jwt_generator");
const CustomError_1 = require("../errors/CustomError");
const authMiddlware = (req, res, next) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        if (!req.session) {
            throw new CustomError_1.CustomError('unauthorized', 403);
        }
        const token = req.session.jwt;
        const decodedtoken = jwt_generator_1.JwtManager.Jwtdecoder(token);
        if (!decodedtoken.email || !decodedtoken.id) {
            throw new CustomError_1.CustomError('unauthorized', 403);
        }
        req.user = decodedtoken;
        next();
    }
    catch (error) {
        next(error);
    }
});
exports.authMiddlware = authMiddlware;
